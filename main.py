# Copyright (C) 2019 The Raphielscape Company LLC.
#
# Licensed under the Raphielscape Public License, Version 1.c (the "License");
# you may not use this file except in compliance with the License.
#

# Owen UserBot - ErdewBey - ByMisakiMey

""" UserBot ba≈ülangƒ±√ß noktasƒ± """
import importlib
from importlib import import_module
from sqlite3 import connect
import os
import requests
from telethon.tl.types import InputMessagesFilterDocument
from telethon.errors.rpcerrorlist import PhoneNumberInvalidError
from telethon.tl.functions.channels import GetMessagesRequest
from . import BRAIN_CHECKER, LOGS, bot, PLUGIN_CHANNEL_ID, CMD_HELP, LANGUAGE, OWEN_VERSION, PATTERNS, DEFAULT_NAME, BOT_TOKEN
from .modules import ALL_MODULES
from .asisstant.modules import ALL_MODULE
import userbot.modules.sql_helper.mesaj_sql as MSJ_SQL
import userbot.modules.sql_helper.galeri_sql as GALERI_SQL
from pySmartDL import SmartDL
from telethon.tl import functions
from random import choice
import chromedriver_autoinstaller
from json import loads, JSONDecodeError
import re
import userbot.cmdhelp
import glob

ALIVE_MSG = [
    "` üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä` **{owensahip}**  \n  {owen} ",
    " ` üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä` **{owensahip}**, `` \n  {owen} ",
    "` üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä`, **{owensahip}** \n  {owen} ",
    " üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä` \n Bot Versiyonu: {owen} ",
    "` üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä` **{owensahip}**. \n  {owen} ",
    "` üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä` \n Bot Versiyonu: {owen} "
]

DIZCILIK_STR = [
    "stiker √º√ß√ºn darƒ±xƒ±ram...",
    "Oƒüurladƒ±m getdi tez saƒüal ü§≠",
    "Ya≈üasƒ±n diz √ß√∂k…ôk...",
    "Bu stikeri √∂z paketim…ô d…ôv…ôt edir…ôm...",
    "Bunu oƒüurlamalƒ±yam...",
    "Hey, bu g√∂z…ôl stikerdir!\nM…ôn d…ôrhal bunu oƒüurladƒ±m..",
    "Stikeriniz…ô oƒüurlayƒ±ram\nhahaha.",
    "Hey ora bax. (‚òâÔΩ°‚òâ)!‚Üí\nM…ôn buna oƒüurlayark…ôn...",
    "Qƒ±zƒ±lg√ºll…ôr qƒ±rmƒ±zƒ± b…ôn√∂v≈ü…ôl…ôr mavidir, bu stikeri paketim…ô oƒüurlasam cool olacam..",
    "Stiker h…ôbsd…ôdir...",
    "By Oƒüru bu stik…ôri oƒüurladƒ±",
    "Niy…ô bu g√∂z…ôl stiker paketimd…ô olmasƒ±n ü§≠",
]

AFKSTR = [
    "Hazƒ±rda t…ôl…ôsir…ôm, sonra m…ôn…ô yaza bil…ôrs…ôn? Onsuz da qayƒ±dacaƒüam."
    "Z…ông etdiyiniz ≈ü…ôxs hazƒ±rda telefona cavab ver…ô bilmir. Tondan sonra mesajƒ±nƒ±zƒ± √∂z tarifinizd…ô qoya bil…ôrsiniz. Mesajƒ±n qiym…ôti 49 q…ôpikdir. \n`biiiiiiiiiiiiiiiiiiiiiiiiiiiiip`!",
    "Bir ne√ß…ô d…ôqiq…ôy…ô qayƒ±dacaƒüam. Amma etm…ôs…ôm... bir az daha g√∂zl…ôyin."
    "Hazƒ±rda burada deyil…ôm, amma y…ôqin ki, ba≈üqa yerd…ôy…ôm."
    "Qƒ±zƒ±lg√ºll…ôr qƒ±rmƒ±zƒ±dƒ±r\nB…ôn√∂v≈ü…ôl…ôr mavidir\nM…ôn…ô mesaj buraxƒ±n\nM…ôn siz…ô qayƒ±dacaƒüam.",
    "B…ôz…ôn h…ôyatda …ôn yax≈üƒ± ≈üeyl…ôr g√∂zl…ôm…ôy…ô d…ôy…ôr...\nM…ôn tezlikl…ô qayƒ±dacaƒüam."
    "M…ôn tezlikl…ô qayƒ±dacaƒüam, amma qayƒ±tmasam, daha sonra qayƒ±dacaƒüam."
    "H…ôl…ô ba≈üa d√º≈üm√ºrs…ôns…ô,\nM…ôn burada deyil…ôm."
    "Salam, uzaq mesajƒ±ma xo≈ü g…ôldin, bu g√ºn s…ôni nec…ô g√∂rm…ôm…ôzliy…ô vura bil…ôr…ôm?"
    "Hazƒ±rda klaviaturadan uzaqdayam, amma ekranƒ±nƒ±zda kifay…ôt q…ôd…ôr y√ºks…ôk s…ôsl…ô qƒ±≈üqƒ±rƒ±rsƒ±nƒ±zsa, sizi e≈üidir…ôm."
    "M…ôn bu istiqam…ôtd…ô gedir…ôm\n---->",
    "M…ôn bu istiqam…ôtd…ô gedir…ôm\n<----",
    "L√ºtf…ôn, bir mesaj buraxƒ±n v…ô m…ôni artƒ±q olduƒüumdan daha vacib hiss etdirin."
    "Sahibim burada deyil, m…ôn…ô mesaj yazmaƒüƒ± dayandƒ±rƒ±n."
    "Burada olsaydƒ±m\nS…ôn…ô harda olduƒüumu dey…ôrdim.\n\nAmma m…ôn deyil…ôm,\ngeri qayƒ±danda soru≈ü...",
    "M…ôn uzaqdayam!\nBilmir…ôm n…ô vaxt qayƒ±dacaƒüam!\nƒ∞n≈üallah bir ne√ß…ô d…ôqiq…ôy…ô!",
    "Sahibim hazƒ±rda m√ºsait deyil. Adƒ±nƒ±zƒ±, n√∂mr…ônizi v…ô √ºnvanƒ±nƒ±zƒ± bildirs…ôniz, m…ôn onu ona ver…ô bil…ôr…ôm ki, qayƒ±danda."
    "Baƒüƒ±≈ülayƒ±n, ustadƒ±m burada deyil.\nO g…ôl…ôn…ô q…ôd…ôr m…ôniml…ô danƒ±≈üa bil…ôrsiniz.\nAƒüam daha sonra sizinl…ô …ôlaq…ô saxlayacaq."
    "M…ôhz edir…ôm ki, bir mesaj g√∂zl…ôyirdin!",
    "H…ôyat √ßox qƒ±sadƒ±r, g√∂r√ºl…ôsi √ßox ≈üey var...\nM…ôn onlardan birini edir…ôm...",
    "Hal-hazƒ±rda burada deyil…ôm....\n amma olsam ...\n\nbu …ôla olmazdƒ±mƒ±?",
    "M…ôni xatƒ±rlamaƒüƒ±nƒ±za ≈üadam, amma hazƒ±rda klaviatura m…ônim √º√ß√ºn √ßox uzaqdƒ±r",
    "B…ôlk…ô m…ôn yax≈üƒ±yam, b…ôlk…ô d…ô pis…ôm, bilmirs…ôn, amma AFK olduƒüumu g√∂r…ô bil…ôrs…ôn"
]

KICKME_MSG = [
    "∆èlvida m…ôn gedir…ôm üëãüèª",
    "M…ôn sakitc…ô gedir…ôm   ",
    "S…ôn bilm…ôd…ôn gets…ôm, bir g√ºn qrupda olmadƒ±ƒüƒ±mƒ± anlayacaqsan.. Ona g√∂r…ô bu mesajƒ± t…ôrk edir…ômüö™",
    "M…ôn bu yeri d…ôrhal t…ôrk etm…ôliy…ômü§≠"
]

CV_MSG = [
"**{DEFAULT_NAME}** `O, √ßox m…ôlumat verm…ôdi, amma bilir…ôm ki, O, √ßox z√∂vql√ºd√ºr, √ß√ºnki Owen Userbot-dan istifad…ô edir.` üòÅ",
    "'Baƒüƒ±≈ülayƒ±n, siz…ô ver…ôc…ôk he√ß bir m…ôlumatƒ±m yoxdur.'"
]


UNAPPROVED_MSG = ("`Hey, olduƒüun yerd…ô qal!üë®‚Äçüíª M…ôn Owen…ôm. Narahat olma!\n\n`"
                  "`Sahibim m…ôn…ô mesaj yazmaƒüa icaz…ô verm…ôdi, ona g√∂r…ô d…ô sahibim sizi t…ôsdiq ed…ôn…ô q…ôd…ôr bu mesajƒ± alacaqsƒ±nƒ±z.. `"
                  "`Sahibimin aktiv olmasƒ±nƒ± g√∂zl…ôyin, o, ad…ôt…ôn PM-l…ôri t…ôsdiql…ôyir.\n\n`"
                  "`Bildiyim q…ôd…ôr, o, ba≈ü nazirl…ôrin √ßƒ±lƒüƒ±n insanlara getm…ôsin…ô icaz…ô vermir.")

DB = connect("learning-data-root.check")
CURSOR = DB.cursor()
CURSOR.execute("""SELECT * FROM BRAIN1""")
ALL_ROWS = CURSOR.fetchall()



INVALID_PH = '\nX∆èTA: Daxil edilmi≈ü telefon n√∂mr…ôsi yanlƒ±≈üdƒ±r' \
             '\n ƒ∞pucu: √ñlk…ô kodunuzdan istifad…ô ed…ôr…ôk n√∂mr…ônizi daxil edin' \
             '\n Telefon n√∂mr…ônizi yenid…ôn yoxlayƒ±n'

for i in ALL_ROWS:
    BRAIN_CHECKER.append(i[0])
connect("learning-data-root.check").close()
BRAIN_CHECKER = BRAIN_CHECKER[0]


def extractCommands(file):
    FileRead = open(file, 'r').read()
    
    if '/' in file:
        file = file.split('/')[-1]

    Pattern = re.findall(r"@register\(.*pattern=(r|)\"(.*)\".*\)", FileRead)
    Komutlar = []

    if re.search(r'CmdHelp\(.*\)', FileRead):
        pass
    else:
        dosyaAdi = file.replace('.py', '')
        CmdHelp = userbot.cmdhelp.CmdHelp(dosyaAdi, False)

        # Komutlarƒ± Alƒ±yoruz #
        for Command in Pattern:
            Command = Command[1]
            if Command == '' or len(Command) <= 1:
                continue
            Komut = re.findall("(^.*[a-zA-Z0-9≈üƒü√º√∂√ßƒ±]\w)", Command)
            if (len(Komut) >= 1) and (not Komut[0] == ''):
                Komut = Komut[0]
                if Komut[0] == '^':
                    KomutStr = Komut[1:]
                    if KomutStr[0] == '.':
                        KomutStr = KomutStr[1:]
                    Komutlar.append(KomutStr)
                else:
                    if Command[0] == '^':
                        KomutStr = Command[1:]
                        if KomutStr[0] == '.':
                            KomutStr = KomutStr[1:]
                        else:
                            KomutStr = Command
                        Komutlar.append(KomutStr)

            # OWENPY
            Owenpy = re.search('\"\"\"OWENPY(.*)\"\"\"', FileRead, re.DOTALL)
            if not Owenpy == None:
                Owenpy = Owenpy.group(0)
                for Satir in Owenpy.splitlines():
                    if (not '"""' in Satir) and (':' in Satir):
                        Satir = Satir.split(':')
                        Isim = Satir[0]
                        Deger = Satir[1][1:]
                                
                        if Isim == 'INFO':
                            CmdHelp.add_info(Deger)
                        elif Isim == 'WARN':
                            CmdHelp.add_warning(Deger)
                        else:
                            CmdHelp.set_file_info(Isim, Deger)
            for Komut in Komutlar:
                # if re.search('\[(\w*)\]', Komut):
                    # Komut = re.sub('(?<=\[.)[A-Za-z0-9_]*\]', '', Komut).replace('[', '')
                CmdHelp.add_command(Komut, None, 'Bu plagin xaricd…ôn y√ºkl…ônib. He√ß bir izahat m√º…ôyy…ôn edilm…ômi≈üdir.')
            CmdHelp.add()

try:
    bot.start()
    idim = bot.get_me().id
    owenbl = requests.get('https://raw.githubusercontent.com/erdewbey/datas/master/blacklist.json').json()
    if idim in owenbl:
        bot.send_message("m…ôn", f"`‚ùå Crolok adminl…ôri siz…ô botdan qadaƒüa qoydular! Bot baƒülanƒ±r...`")
        LOGS.error("Crolok adminl…ôri sizi botdan qadaƒüan etdi! Bot baƒülanƒ±r...")
        bot.disconnect()
    # ChromeDriver'ƒ± Ayarlayalƒ±m #
    try:
        chromedriver_autoinstaller.install()
    except:
        pass
    
    # Galeri i√ßin deƒüerler
    GALERI = {}

    # PLUGIN MESAJLARI AYARLIYORUZ
    PLUGIN_MESAJLAR = {}
    ORJ_PLUGIN_MESAJLAR = {"alive": f"{str(choice(ALIVE_MSG))}", "afk": f"`{str(choice(AFKSTR))}`", "kickme": f"`{str(choice(KICKME_MSG))}`", "pm": str(UNAPPROVED_MSG), "dƒ±zcƒ±": str(choice(DIZCILIK_STR)), "cv": str(choice(CV_MSG)), "ban": "üåÄ {mention}`, Banlandƒ±!!`", "mute": "üåÄ {mention}`, s…ôssize alƒ±ndƒ±!`", "approve": "`Salam` {mention}`, ƒ∞ndi m…ôn…ô mesaj g√∂nd…ôr…ô bil…ôrsiniz!`", "disapprove": "{mention}`, ƒ∞ndi m…ôn…ô mesaj g√∂nd…ôr…ô bil…ôrsiniz!`", "block": "{mention}`, M…ôni buna m…ôcbur etdin! M…ôn s…ôni blokladƒ±m!`"}


    PLUGIN_MESAJLAR_TURLER = ["alive", "afk", "kickme", "pm", "dƒ±zcƒ±", "cv", "ban", "mute", "approve", "disapprove", "block"]
    for mesaj in PLUGIN_MESAJLAR_TURLER:
        dmsj = MSJ_SQL.getir_mesaj(mesaj)
        if dmsj == False:
            PLUGIN_MESAJLAR[mesaj] = ORJ_PLUGIN_MESAJLAR[mesaj]
        else:
            if dmsj.startswith("MEDYA_"):
                medya = int(dmsj.split("MEDYA_")[1])
                medya = bot.get_messages(PLUGIN_CHANNEL_ID, ids=medya)

                PLUGIN_MESAJLAR[mesaj] = medya
            else:
                PLUGIN_MESAJLAR[mesaj] = dmsj
    if not PLUGIN_CHANNEL_ID == None:
        LOGS.info("üîÑ Pluginl…ôr Y√ºkl…ônir..")
        try:
            KanalId = bot.get_entity(PLUGIN_CHANNEL_ID)
        except:
            KanalId = "me"

        for plugin in bot.iter_messages(KanalId, filter=InputMessagesFilterDocument):
            if plugin.file.name and (len(plugin.file.name.split('.')) > 1) \
                and plugin.file.name.split('.')[-1] == 'py':
                Split = plugin.file.name.split('.')

                if not os.path.exists("./userbot/modules/" + plugin.file.name):
                    dosya = bot.download_media(plugin, "./userbot/modules/")
                else:
                    LOGS.info("Bu Plugin Onsuz Y√ºkl…ônib " + plugin.file.name)
                    extractCommands('./userbot/modules/' + plugin.file.name)
                    dosya = plugin.file.name
                    continue 
                
                try:
                    spec = importlib.util.spec_from_file_location("userbot.modules." + Split[0], dosya)
                    mod = importlib.util.module_from_spec(spec)

                    spec.loader.exec_module(mod)
                except Exception as e:
                    LOGS.info(f"`[√ó] Y√ºkl…ôm…ô alƒ±nmadƒ±! Plugin S…ôhv!!\n\nX…ôta: {e}`")

                    try:
                        plugin.delete()
                    except:
                        pass

                    if os.path.exists("./userbot/modules/" + plugin.file.name):
                        os.remove("./userbot/modules/" + plugin.file.name)
                    continue
                extractCommands('./userbot/modules/' + plugin.file.name)
    else:
        bot.send_message("m…ôn", f"`L√ºtf…ôn, plaginl…ôri daimi etm…ôk √º√ß√ºn PLUGIN_CHANNEL_ID t…ôyin edin.`")


   
except PhoneNumberInvalidError:
    print(INVALID_PH)
    exit(1)

async def FotoDegistir (foto):
    FOTOURL = GALERI_SQL.TUM_GALERI[foto].foto
    r = requests.get(FOTOURL)

    with open(str(foto) + ".jpg", 'wb') as f:
        f.write(r.content)    
    file = await bot.upload_file(str(foto) + ".jpg")
    try:
        await bot(functions.photos.UploadProfilePhotoRequest(
            file
        ))
        return True
    except:
        return False

    
for module_name in ALL_MODULES:
    imported_module = import_module("userbot.modules." + module_name)
if BOT_TOKEN:
 for module_name in ALL_MODULE:
    imported_module = import_module("userbot.asisstant.modules." + module_name)    

os.system("clear")

LOGS.info("+===========================================================+")
LOGS.info("|             üêä  ùêÇ  ùêë  ·è´  ùêã  ·è´  ùêä   üêä                   |")
LOGS.info("+==============+==============+==============+==============+")
LOGS.info("|                                                            |")
LOGS.info("Botunuz i≈ül…ôyir! ƒ∞st…ônil…ôn s√∂hb…ôtd…ô .alive yazaraq onu sƒ±nayƒ±n."
          " ∆èg…ôr k√∂m…ôy…ô ehtiyacƒ±nƒ±z varsa, D…ôst…ôk qrupumuza g…ôlin t.me/CrolokSup")
LOGS.info(f"Sizin bot versiyanƒ±z: Crolok ==> {OWEN_VERSION}")

"""
if len(argv) not in (1, 3, 4):
    bot.disconnect()
else:
"""
bot.run_until_disconnected()
